(transfer from-account to-account amount)
    ((from-account 'withdraw) amount)
    ((to-account 'deposit) amount))

(define (exchange account1 account2)
 (let ((difference (- (account1 'balance)
                      (account2 'balance))))
  ((account1 'withdraw) difference)
  ((account2 'deposit) difference)))

The problem with exchange is that computed difference can be invalidated
as a result of ordering. In transfer, there is nothing to invalidate.
Both accounts stay the same, amount is predefined and not relative to
the current state.

